{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/Title/Title.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Title","CSSTransition","in","appear","timeout","classNames","unmountOnExit","ContactForm","state","name","number","handleSubmitForm","e","preventDefault","props","onAddContact","setState","handleChange","target","value","this","form","onSubmit","input","type","placeholder","onChange","btn","Component","defaultProps","ContactList","contacts","onDelete","TransitionGroup","component","list","map","id","contact","onClick","aria-label","Filter","length","Notification","message","App","filter","setMessage","note","setTimeout","addContact","uuidv4","find","item","toLowerCase","prevState","deleteContact","changeFilter","getFilteredContactsList","includes","localStorage","getItem","parselContacts","JSON","parse","prevProps","setItem","stringify","filteredContactsList","ommountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07691616.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"input\":\"ContactForm_input__3dHde\",\"btn\":\"ContactForm_btn__tShh_\",\"container\":\"ContactForm_container__jcN59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2cE9S\",\"contact\":\"ContactList_contact__2n-Pp\",\"name\":\"ContactList_name__2vs56\",\"number\":\"ContactList_number__3h_Jg\",\"btn\":\"ContactList_btn__2-jnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3e1Mh\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Title.css';\n\nconst Title = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={500}\n      classNames=\"Title-SlideIn\"\n      unmountOnExit\n    >\n      <h1 className=\"Title\">Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Title;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onAddContact: PropTypes.func,\n  };\n\n  static defaultProps = {};\n\n  handleSubmitForm = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    this.props.onAddContact(name, number);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <form className={styles.form} onSubmit={this.handleSubmitForm}>\n          <label>\n            <input\n              className={styles.input}\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              placeholder=\"Name\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <input\n              className={styles.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"+380\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport '../Fade/Fade.css';\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          timeout={250}\n          classNames=\"List-slideIn\"\n          unmountOnExit\n        >\n          <li className={styles.contact}>\n            <span className={styles.name}>{name}</span>\n            <span className={styles.number}>{number}</span>\n            <button\n              className={styles.btn}\n              onClick={() => {\n                onDelete(id);\n              }}\n              aria-label=\"Удалить контакт\"\n            >\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n\nContactList.propTypes = {\n  onDelete: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.css';\nimport { CSSTransition } from 'react-transition-group';\n\nexport default function Filter({ value, onChange, contacts }) {\n  return (\n    <CSSTransition\n      in={contacts.length > 1}\n      timeout={250}\n      classNames=\"Filter-fade\"\n      unmountOnExit\n    >\n      <form className=\"form\">\n        <label>\n          <span className=\"title\">Find contacts by name</span>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n        </label>\n      </form>\n    </CSSTransition>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport './Notification.css';\n\nconst Notification = ({ message }) => {\n  return (\n    <CSSTransition\n      in={message}\n      timeout={250}\n      classNames=\"Notification-fade\"\n      unmountOnExit\n    >\n      <div className=\"Overlay\">\n        <p className=\"Notification\">{message}</p>\n      </div>\n    </CSSTransition>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './Components/Container/Container';\nimport Title from './Components/Title/Title';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport Notification from './Components/Notification/Notification';\nimport { CSSTransition } from 'react-transition-group';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    message: null,\n  };\n\n  setMessage = (note) => {\n    this.setState({ message: note });\n    setTimeout(() => {\n      this.setState({ message: null });\n    }, 2500);\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (name === '') {\n      this.setMessage('Enter concact name, please!');\n      return;\n    }\n    if (number === '') {\n      this.setMessage('Enter concact phone, please!');\n      return;\n    }\n    if (\n      this.state.contacts.find(\n        (item) => item.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setMessage('Contact already exists!');\n      return;\n    }\n    this.setState((prevState) => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\n      };\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getFilteredContactsList = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parselContacts = JSON.parse(contacts);\n\n    if (parselContacts) {\n      this.setState({ contacts: parselContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter, message } = this.state;\n    const filteredContactsList = this.getFilteredContactsList();\n\n    return (\n      <Container>\n        <Title />\n\n        <Notification message={message} />\n\n        <ContactForm onAddContact={this.addContact} />\n\n        <Filter\n          value={filter}\n          onChange={this.changeFilter}\n          contacts={contacts}\n        />\n\n        <CSSTransition in={contacts.length > 0} timeout={0} ommountOnExit>\n          <ContactList\n            contacts={filteredContactsList}\n            onDelete={this.deleteContact}\n          />\n        </CSSTransition>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}